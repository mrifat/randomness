#!/bin/bash

# Update The System
apt-get update -y
apt-get upgrade -y

# Create directories
mkdir ~/workspace
mkdir ~/workspace/MRifat
mkdir ~/workspace/contributions
mkdir ~/services
mkdir ~/github

# Install basic applications
apt-get -y --force-yes ghc cabal-install libusb-1.0 postgresql libpq-dev build-essential bison openssl libreadline6 libreadline6-dev curl git-core zlib1g zlib1g-dev libssl-dev libyaml-dev libxml2-dev libxslt-dev autoconf libc6-dev tmux vim git htop nodejs xbindkeys xmacro

# Get necessary packages
cd ~/Downloads
wget http://hackage.haskell.org/package/bindings-DSL-1.0.21/bindings-DSL-1.0.21.tar.gz http://hackage.haskell.org/package/bindings-libusb-1.4.5.0/bindings-libusb-1.4.5.0.tar.gz http://hackage.haskell.org/package/usb-1.2.0.1/usb-1.2.0.1.tar.gz http://hackage.haskell.org/package/text-1.1.1.3/text-1.1.1.3.tar.gz http://hackage.haskell.org/package/vector-0.10.12.1/vector-0.10.12.1.tar.gz http://hackage.haskell.org/package/primitive-0.5.4.0/primitive-0.5.4.0.tar.gz

# Install Haskell Usb package
tars=( "bindings-DSL-1.0.21.tar.gz" "bindings-libusb-1.4.5.0.tar.gz" "text-1.1.1.3.tar.gz" "primitive-0.5.4.0.tar.gz" "vector-0.10.12.1.tar.gz" "usb-1.2.0.1.tar.gz" )
dirqs=( "bindings-DSL-1.0.21" "bindings-libusb-1.4.5.0" "text-1.1.1.3" "primitive-0.5.4.0" "vector-0.10.12.1" "usb-1.2.0.1" )
for file in "${tars}"
do
  :
  tar xzf $file
done

for dir in "${dirqs}"
do
  :
  cd $dir
  sudo runhaskell Setup.hs configure
  sudo runhaskell Setup.hs build
  sudo runhaskell Setup.hs install
done

# Clone necessary repos
cd ~/workspace/MRifat
git clone https://github.com/MRifat/randomness.git
git clone https://github.com/MRifat/dotfiles.git

cd ~/github
git clone https://github.com/tuxmark5/EnableRazer.git

# Configure Razer Devices
cabal update
cabal install usb
cd EnableRazer
mapfile -t lines < <(lsusb -d 1532: | grep -o -E "[:][[:digit:]]+[[:lower:]]*" | sed 's/:/0x/')
line="  withDevice 0x1532 [${lines[0]}, ${lines[1]}] $ \\\dev -> do"
sed -i "67s/.*/$line/" src/Main.hs
cabal configure
cabal build
sudo cp dist/build/EnableRazer/EnableRazer /sbin/.
sudo /sbin/EnableRazer

# Setup Vim
mkdir ~/.vim/colors
cp dotfiles/vimrc ~/.vimrc
cp dotfiles/twilight.vim ~/.vim/colors/.
git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vim
vim +PluginInstall +qall

# Clone contributions
cd workspace/contributions
git clone https://github.com/railsgirls/railsgirls.git
git clone https://github.com/MRifat/railsgirls.github.com.git
git clone https://github.com/MRifat/oath.git

# Install Redis
cd services
git clone https://github.com/antirez/redis.git
cd redis
make install
cd utils
./install_server.sh
cd

# Configure PostgreSQL
su - postgres
create role $1 with createdb login password $2
# psql -c "CREATE USER $1 WITH PASSWORD '$2';"

# Setup rbenv
git clone https://github.com/sstephenson/rbenv.git ~/.rbenv
echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc
echo 'eval "$(rbenv init -)"' >> ~/.bashrc
git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
git clone https://github.com/sstephenson/rbenv-gem-rehash.git ~/.rbenv/plugins/rbenv-gem-rehash
git clone https://github.com/maljub01/rbenv-bundle-exec.git ~/.rbenv/plugins/rbenv-bundle-exec

# Install Rubies
for version in `cat ~/workspace/randomness/ruby-versions`; do rbenv install $version; done

# We're Done
echo ""
echo "==================="
echo "====We're Done!===="
echo "==================="
echo ""
echo "You might wanna update this script soon!"
